//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Data.Linq;
using System.Linq.Expressions;
using System.Data.Linq.Mapping;
using System.Collections;
using System.Collections.Generic;
using Gravitybox.Datastore.EFDAL;

namespace Gravitybox.Datastore.EFDAL
{
	#region AppliedPatchQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the AppliedPatch collection.
	/// </summary>
	[Serializable]
	[Table(Name = "AppliedPatch")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class AppliedPatchQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'AppliedPatch.Description' database field)
		/// </summary>
		[Column(Name = "Description", DbType = "NVarChar (50)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Description { get; set; }
		/// <summary>
		/// (Maps to the 'AppliedPatch.ID' database field)
		/// </summary>
		[Column(Name = "ID", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual System.Guid ID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

	#region CacheInvalidateQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the CacheInvalidate collection.
	/// </summary>
	[Serializable]
	[Table(Name = "CacheInvalidate")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class CacheInvalidateQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'CacheInvalidate.AddedDate' database field)
		/// </summary>
		[Column(Name = "AddedDate", DbType = "DateTime2 (2)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime AddedDate { get; set; }
		/// <summary>
		/// (Maps to the 'CacheInvalidate.Count' database field)
		/// </summary>
		[Column(Name = "Count", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Count { get; set; }
		/// <summary>
		/// (Maps to the 'CacheInvalidate.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'CacheInvalidate.RowId' database field)
		/// </summary>
		[Column(Name = "RowId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long RowId { get; set; }

		#endregion

	}

	#endregion

	#region ConfigurationSettingQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the ConfigurationSetting collection.
	/// </summary>
	[Serializable]
	[Table(Name = "ConfigurationSetting")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class ConfigurationSettingQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'ConfigurationSetting.ID' database field)
		/// </summary>
		[Column(Name = "ID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ID { get; set; }
		/// <summary>
		/// (Maps to the 'ConfigurationSetting.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "NVarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'ConfigurationSetting.Value' database field)
		/// </summary>
		[Column(Name = "Value", DbType = "NVarChar (max)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Value { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

	#region HousekeepingQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Housekeeping collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Housekeeping")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class HousekeepingQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Housekeeping.Data' database field)
		/// </summary>
		[Column(Name = "Data", DbType = "VarBinary (max)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual System.Byte[] Data { get; set; }
		/// <summary>
		/// (Maps to the 'Housekeeping.ID' database field)
		/// </summary>
		[Column(Name = "ID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ID { get; set; }
		/// <summary>
		/// (Maps to the 'Housekeeping.Type' database field)
		/// </summary>
		[Column(Name = "Type", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Type { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

	#region LockStatQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the LockStat collection.
	/// </summary>
	[Serializable]
	[Table(Name = "LockStat")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class LockStatQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'LockStat.CurrentReadCount' database field)
		/// </summary>
		[Column(Name = "CurrentReadCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int CurrentReadCount { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.DateStamp' database field)
		/// </summary>
		[Column(Name = "DateStamp", DbType = "DateTime", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime DateStamp { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.Elapsed' database field)
		/// </summary>
		[Column(Name = "Elapsed", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Elapsed { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.Failure' database field)
		/// </summary>
		[Column(Name = "Failure", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual bool Failure { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.IsWriteLockHeld' database field)
		/// </summary>
		[Column(Name = "IsWriteLockHeld", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual bool IsWriteLockHeld { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.LockStatId' database field)
		/// </summary>
		[Column(Name = "LockStatId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int LockStatId { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.ThreadId' database field)
		/// </summary>
		[Column(Name = "ThreadId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ThreadId { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.TraceInfo' database field)
		/// </summary>
		[Column(Name = "TraceInfo", DbType = "VarChar (50)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string TraceInfo { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.WaitingReadCount' database field)
		/// </summary>
		[Column(Name = "WaitingReadCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int WaitingReadCount { get; set; }
		/// <summary>
		/// (Maps to the 'LockStat.WaitingWriteCount' database field)
		/// </summary>
		[Column(Name = "WaitingWriteCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int WaitingWriteCount { get; set; }

		#endregion

	}

	#endregion

	#region RepositoryQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Repository collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Repository")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class RepositoryQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// Value is reset on when a repository is changed
		/// (Maps to the 'Repository.Changestamp' database field)
		/// </summary>
		[Column(Name = "Changestamp", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Changestamp { get; set; }
		/// <summary>
		/// (Maps to the 'Repository.DefinitionData' database field)
		/// </summary>
		[Column(Name = "DefinitionData", DbType = "NVarChar (max)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string DefinitionData { get; set; }
		/// <summary>
		/// Value is reset on when the dimensions of a repository changed
		/// (Maps to the 'Repository.Dimensionstamp' database field)
		/// </summary>
		[Column(Name = "Dimensionstamp", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Dimensionstamp { get; set; }
		/// <summary>
		/// Determines if this item has been marked for deletion
		/// (Maps to the 'Repository.IsDeleted' database field)
		/// </summary>
		[Column(Name = "IsDeleted", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual bool IsDeleted { get; set; }
		/// <summary>
		/// Determines if the item has been fully created
		/// (Maps to the 'Repository.IsInitialized' database field)
		/// </summary>
		[Column(Name = "IsInitialized", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual bool IsInitialized { get; set; }
		/// <summary>
		/// (Maps to the 'Repository.ItemCount' database field)
		/// </summary>
		[Column(Name = "ItemCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ItemCount { get; set; }
		/// <summary>
		/// (Maps to the 'Repository.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "NVarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Name { get; set; }
		/// <summary>
		/// The parent abstract repository
		/// (Maps to the 'Repository.ParentId' database field)
		/// </summary>
		[Column(Name = "ParentId", DbType = "Int", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int? ParentId { get; set; }
		/// <summary>
		/// (Maps to the 'Repository.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'Repository.UniqueKey' database field)
		/// </summary>
		[Column(Name = "UniqueKey", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual System.Guid UniqueKey { get; set; }
		/// <summary>
		/// (Maps to the 'Repository.VersionHash' database field)
		/// </summary>
		[Column(Name = "VersionHash", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long VersionHash { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

	#region RepositoryActionTypeQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryActionType collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryActionType")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class RepositoryActionTypeQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryActionType.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryActionType.RepositoryActionTypeId' database field)
		/// </summary>
		[Column(Name = "RepositoryActionTypeId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryActionTypeId { get; set; }

		#endregion

	}

	#endregion

	#region RepositoryLogQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryLog collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryLog")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class RepositoryLogQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryLog.Count' database field)
		/// </summary>
		[Column(Name = "Count", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Count { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.ElapsedTime' database field)
		/// </summary>
		[Column(Name = "ElapsedTime", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ElapsedTime { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.IPAddress' database field)
		/// </summary>
		[Column(Name = "IPAddress", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string IPAddress { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.LockTime' database field)
		/// </summary>
		[Column(Name = "LockTime", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int LockTime { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.Query' database field)
		/// </summary>
		[Column(Name = "Query", DbType = "NVarChar (500)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Query { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.QueryId' database field)
		/// </summary>
		[Column(Name = "QueryId", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual System.Guid QueryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.RepositoryLogId' database field)
		/// </summary>
		[Column(Name = "RepositoryLogId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long RepositoryLogId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.UsedCache' database field)
		/// </summary>
		[Column(Name = "UsedCache", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual bool UsedCache { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string CreatedBy { get; set; }

		#endregion

	}

	#endregion

	#region RepositoryStatQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryStat collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryStat")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class RepositoryStatQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryStat.Count' database field)
		/// </summary>
		[Column(Name = "Count", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Count { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.Elapsed' database field)
		/// </summary>
		[Column(Name = "Elapsed", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int Elapsed { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.ItemCount' database field)
		/// </summary>
		[Column(Name = "ItemCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ItemCount { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.LockTime' database field)
		/// </summary>
		[Column(Name = "LockTime", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int LockTime { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.ReadLockCount' database field)
		/// </summary>
		[Column(Name = "ReadLockCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ReadLockCount { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.RepositoryActionTypeId' database field)
		/// </summary>
		[Column(Name = "RepositoryActionTypeId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryActionTypeId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.RepositoryStatId' database field)
		/// </summary>
		[Column(Name = "RepositoryStatId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long RepositoryStatId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.WaitingLocks' database field)
		/// </summary>
		[Column(Name = "WaitingLocks", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int WaitingLocks { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryActionType entity.
		/// </summary>
		[Association(ThisKey = "RepositoryActionTypeId", OtherKey = "RepositoryActionTypeId")]
		public Gravitybox.Datastore.EFDAL.RepositoryActionTypeQuery RepositoryActionType { get; private set; }


		#endregion

	}

	#endregion

	#region ServerQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Server collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Server")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class ServerQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Server.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "NVarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'Server.ServerId' database field)
		/// </summary>
		[Column(Name = "ServerId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ServerId { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

	#region ServerStatQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the ServerStat collection.
	/// </summary>
	[Serializable]
	[Table(Name = "ServerStat")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class ServerStatQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'ServerStat.AddedDate' database field)
		/// </summary>
		[Column(Name = "AddedDate", DbType = "DateTime", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime AddedDate { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.CachedItems' database field)
		/// </summary>
		[Column(Name = "CachedItems", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int CachedItems { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.MemoryUsageAvailable' database field)
		/// </summary>
		[Column(Name = "MemoryUsageAvailable", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long MemoryUsageAvailable { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.MemoryUsageProcess' database field)
		/// </summary>
		[Column(Name = "MemoryUsageProcess", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long MemoryUsageProcess { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.MemoryUsageTotal' database field)
		/// </summary>
		[Column(Name = "MemoryUsageTotal", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long MemoryUsageTotal { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.ProcessorUsage' database field)
		/// </summary>
		[Column(Name = "ProcessorUsage", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ProcessorUsage { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryCreateDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryCreateDelta", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long RepositoryCreateDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryDeleteDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryDeleteDelta", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long RepositoryDeleteDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryLoadDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryLoadDelta", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryLoadDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryTotal' database field)
		/// </summary>
		[Column(Name = "RepositoryTotal", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryTotal { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryUnloadDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryUnloadDelta", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RepositoryUnloadDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.ServerId' database field)
		/// </summary>
		[Column(Name = "ServerId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int ServerId { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.ServerStatId' database field)
		/// </summary>
		[Column(Name = "ServerStatId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual long ServerStatId { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Server entity.
		/// </summary>
		[Association(ThisKey = "ServerId", OtherKey = "ServerId")]
		public Gravitybox.Datastore.EFDAL.ServerQuery Server { get; private set; }


		#endregion

	}

	#endregion

	#region ServiceInstanceQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the ServiceInstance collection.
	/// </summary>
	[Serializable]
	[Table(Name = "ServiceInstance")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class ServiceInstanceQuery : IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'ServiceInstance.FirstCommunication' database field)
		/// </summary>
		[Column(Name = "FirstCommunication", DbType = "DateTime2 (2)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime FirstCommunication { get; set; }
		/// <summary>
		/// (Maps to the 'ServiceInstance.InstanceId' database field)
		/// </summary>
		[Column(Name = "InstanceId", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual System.Guid InstanceId { get; set; }
		/// <summary>
		/// (Maps to the 'ServiceInstance.LastCommunication' database field)
		/// </summary>
		[Column(Name = "LastCommunication", DbType = "DateTime2 (2)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual DateTime LastCommunication { get; set; }
		/// <summary>
		/// There is only one record and it is always RowId = 1
		/// (Maps to the 'ServiceInstance.RowId' database field)
		/// </summary>
		[Column(Name = "RowId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode()]
		public virtual int RowId { get; set; }

		#endregion

	}

	#endregion

}
