//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 0168
#pragma warning disable 0108
using System;
using System.Linq;
using System.ComponentModel;
using System.Runtime.Serialization;
using System.Collections.Generic;
using Gravitybox.Datastore.EFDAL.Entity;

namespace Gravitybox.Datastore.EFDAL
{
	#region StaticDataConstants Enumeration for 'RepositoryActionType' entity
	/// <summary>
	/// Enumeration to define static data items and their ids 'RepositoryActionType' table.
	/// </summary>
	public enum RepositoryActionTypeConstants
	{
		/// <summary>
		/// Enumeration for the 'Query' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "Query")]
		Query = 1,
		/// <summary>
		/// Enumeration for the 'LoadDtaa' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "LoadDtaa")]
		LoadDtaa = 2,
		/// <summary>
		/// Enumeration for the 'SaveData' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "SaveData")]
		SaveData = 3,
		/// <summary>
		/// Enumeration for the 'UnloadData' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "UnloadData")]
		UnloadData = 4,
		/// <summary>
		/// Enumeration for the 'Reset' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "Reset")]
		Reset = 5,
		/// <summary>
		/// Enumeration for the 'ExportSchema' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "ExportSchema")]
		ExportSchema = 6,
		/// <summary>
		/// Enumeration for the 'Backup' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "Backup")]
		Backup = 7,
		/// <summary>
		/// Enumeration for the 'Restore' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "Restore")]
		Restore = 8,
		/// <summary>
		/// Enumeration for the 'Compress' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "Compress")]
		Compress = 9,
		/// <summary>
		/// Enumeration for the 'Shutdown' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "Shutdown")]
		Shutdown = 10,
		/// <summary>
		/// Enumeration for the 'DeleteData' item
		/// </summary>
		[System.ComponentModel.DataAnnotations.Display(Name = "DeleteData")]
		DeleteData = 11,
	}
	#endregion

	#region Entity Context

	/// <summary />
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial interface IDatastoreEntities : System.IDisposable
	{
		/// <summary />
		event EventHandler<Gravitybox.Datastore.EFDAL.EventArguments.EntityListEventArgs> BeforeSaveAddedEntity;
		/// <summary />
		event EventHandler<Gravitybox.Datastore.EFDAL.EventArguments.EntityListEventArgs> BeforeSaveModifiedEntity;
		/// <summary />
		int SaveChanges();

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.AppliedPatch> AppliedPatch { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.CacheInvalidate> CacheInvalidate { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.ConfigurationSetting> ConfigurationSetting { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.Housekeeping> Housekeeping { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.LockStat> LockStat { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.LockValue> LockValue { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.Machine> Machine { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.Repository> Repository { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.RepositoryActionType> RepositoryActionType { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.RepositoryLog> RepositoryLog { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.RepositoryStat> RepositoryStat { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.Server> Server { get ; }

		/// <summary />
		IQueryable<Gravitybox.Datastore.EFDAL.Entity.ServerStat> ServerStat { get ; }

		/// <summary />
		Gravitybox.Datastore.EFDAL.IBusinessObject AddItem(Gravitybox.Datastore.EFDAL.IBusinessObject entity);

		/// <summary />
		void DeleteItem(Gravitybox.Datastore.EFDAL.IBusinessObject entity);

		/// <summary />
		void ReloadItem(BaseEntity entity);

		/// <summary />
		void DetachItem(BaseEntity entity);

		/// <summary />
		ContextStartup ContextStartup { get; }

		/// <summary />
		System.Guid InstanceKey { get; }
	}

	#endregion

	/// <summary />
	public partial interface IMetadata
	{
		/// <summary>
		/// Gets the underlying table name.
		/// </summary>
		string GetTableName();

		/// <summary>
		/// Gets a list of all object fields with alias/code facade applied excluding inheritance.
		/// </summary>
		List<string> GetFields();

		/// <summary>
		/// Returns the type of the parent object if one exists.
		/// </summary>
		System.Type InheritsFrom();

		/// <summary>
		/// Returns the database schema name.
		/// </summary>
		string Schema();

		/// <summary>
		/// Returns the actual database name of the specified field.
		/// </summary>
		string GetDatabaseFieldName(string field);
	}

}

#pragma warning restore 0168
#pragma warning restore 0108
